name: Django CI/CD Pipeline 
on:
    push:
        branches:
            - feature/gh-actions-test
    pull_request:
        branches:
            - feature/gh-actions-test
jobs:
    build:
        runs-on: ubuntu-latest
        env:
            SECRET_KEY: ${{ secrets.SECRET_KEY }}
            DEBUG: ${{ secrets.DEBUG }}
            DB_NAME: ${{ secrets.DB_NAME }}
            DB_USER: ${{ secrets.DB_USER }}
            DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
            DB_HOST: ${{ secrets.DB_HOST }}
            DB_PORT: ${{ secrets.DB_PORT }}
            ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
        steps:
            - uses: actions/checkout@v2
            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                python-version: '3.x'
            
            - name: Install dependencies
              run: |
                    cd backend
                    python -m pip install --upgrade pip
                    pip install -r requirements.txt
            - name: Run tests
              run: |
                    cd backend
                    python manage.py test
    
    build-and-push:
        needs: build
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Login to DockerHub
              uses: docker/login-action@v1
              with:
                username: ${{ secrets.DOCKER_USERNAME }}
                password: ${{ secrets.DOCKER_PASSWORD }}
            
            - name: Build and push Docker image
              uses: docker/build-push-action@v2
              with:
                context: backend
                file: backend/Dockerfile
                push: true
                tags: ${{ secrets.DOCKER_USERNAME }}/django-ci-cd-pipeline:latest

    deploy: 
        needs: build-and-push
        runs-on: aws-ec2-1
        steps:
            - name: Pull Docker image
              run: docker pull ${{ secrets.DOCKER_USERNAME }}/django-ci-cd-pipeline:latest
            - name: Delete Old Container
              run: docker rm -f backendContainer
            - name: Run Docker container
              run: docker run -d -p 8000:8000 --name backendContainer ${{ secrets.DOCKER_USERNAME }}/django-ci-cd-pipeline:latest

